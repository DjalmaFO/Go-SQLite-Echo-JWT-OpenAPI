---
openapi: 3.0.0
info:
  title: Go-SQLite-JWT 
  description: Exemplo de documenação basica de OpenAPI
  contact:
    email: djalmafreire@outlook.com
  version: 1.0.0
servers:
- url: http://192.168.237.146:5005
  description: Ambiente de desenvolvimento - Intecom
tags:
- name: users
  description: Endpoints relacionados a usuários
- name: login
  description: Método de autenticação para obtenção do token JWT
paths:
  /login:
    post:
      tags:
      - login
      summary: Retorno token para acesso as demais rotas
      description: Retorno token para acesso as demais rotas caso seja autenticado, caso contrário retorna mensagem de erro
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        "200":
          description: Retorna um Token
          content:
            application/json:
              schema:
                type: string
                items:
                  type: object
                  properties:
                    token:
                      type: string
                      format: text
                      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
        "400":
          description: Falha ao gerar token
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/Erro"
        "401":
          description: Não autorizado
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/Erro"
        "404":
          description: Rota não encontrada

# Rotas do grupo r (restritas)

  /r/users:
    get:
      tags: 
      - users
      summary: Retorna todos os usuários
      description: Retorna todos os usuários cadastrados
      security:
        - beareAuth: []
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetornoUsuarios"
        "400":
          description: Falha ao gerar token
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/Erro"
        "404":
          description: Rota não encontrada
  /r/user/{id}:
    get:
      tags:
      - users
      summary: Pesquisa de usuário por ID
      description: Retorna dados referentes a pesquisa de usuário pelo seu ID 
      security:
        - beareAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: 
            type: integer
            format: int
            example: 1
            description: ID do usuário a ser pesquisado
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema: 
                $ref:  "#/components/schemas/PesquisaUsuario"
  /r/user:
    post:
      tags: 
      - users
      requestBody:
        content:
          application/json:
            schema: 
              $ref: "#/components/schemas/JSONNewUser"
      security:
        - beareAuth: []
      responses:
        "200":
          description: Sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
                    format: text
                    example: Dados armazenados com sucesso
        "400":
          description: Falha ao gerar token
          content:
            application/json:
              schema:
                $ref:  "#/components/schemas/Erro"
        "404":
          description: Rota não encontrada
components:
  securitySchemes:
    bearerAuth:      
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Login:
      required:
      - login
      - password
      type: object
      properties:
        login:
          type: string
          format: text
          description: Cadastro na base de dados da coluna LOGIN
          example: Usuario 01
        password:
          type: string
          description: Senha cadastrada para o usuário
          format: text
          example: Senha12345
    Erro:
      type: object
      properties:
        msg:
          type: string
          format: text
          example: "Erro inesperado: motivo do erro"
    RetornoUsuarios:
      type: array
      items:
        type: object
        properties:
          id: 
            type: integer
            format: int
            description: ID identificador do usuário
            example: 1
          name: 
            type: string
            format: text
            example: Usuario x
          login:
            $ref:  "#/components/schemas/Login/properties/login"
          timestamp: 
            type: string
            format: datetime
            example: 02/01/2006 15:04 # exemplo de formatação na linguagem GO
    PesquisaUsuario:
      type: object
      properties:
        consulted_by: 
          type: object
          description: Informaçoes de quem realizou a solicitação # Exemplo de obter informaçoes armazenadas no token
          properties:
            ID: 
              type: integer
              format: int
              description: ID identificador do usuário
              example: 1
            Name: 
              type: string
              format: text
              example: Usuario
        result:
          type: object
          properties:
            id: 
              type: integer
              format: int
              description: ID identificador do usuário
              example: 1
            name: 
              type: string
              format: text
              example: Usuario x
            login:
              $ref:  "#/components/schemas/Login/properties/login"
            timestamp: 
              type: string
              format: datetime
              example: 02/01/2006 15:04
    JSONNewUser:
      type: object
      description: informaçoes para cadastro de novo usuário
      properties:
        name: 
          type: string
          format: text
          example: Usuario
        login: 
          type: string
          uniqueItems: true
          format: text
          example: Usuario
        password:
          type: string
          format: text
          example: senha@12345
            

          

        
